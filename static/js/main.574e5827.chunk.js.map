{"version":3,"sources":["components/Words.js","components/Game.js","actions/data.js","App.js","reducers/data.js","reducers/index.js","api/data.js","sagas/data.js","sagas/index.js","index.js"],"names":["Words","allWords","goodWords","nick","question","useState","pickedWords","setPickedWords","checkAnswers","setCheckAnswers","finishGame","setFinishGame","correctAnswers","filter","word","includes","wrongAnswers","correctAnswersNotPicked","score","length","className","map","onClick","newPickedWords","pickedWord","wordHandleClick","Button","variant","color","Game","categories","category","Math","floor","random","all_words","good_words","startGame","setStartGame","userNick","setUserNick","useForm","handleSubmit","register","onSubmit","name","ref","required","minLength","placeholder","type","Types","getDataSuccess","data","payload","App","props","getDataRequest","this","Component","connect","INITIAL_STATE","combineReducers","state","action","getData","axios","get","watchGetDataRequest","call","api","result","put","actions","takeEvery","dataSagas","fork","rootSaga","all","DataSagas","defaults","headers","post","baseURL","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QA4FeA,EAzFD,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EAClBC,mBAAS,IADS,mBAClDC,EADkD,KACrCC,EADqC,OAEhBF,oBAAS,GAFO,mBAElDG,EAFkD,KAEpCC,EAFoC,OAGpBJ,oBAAS,GAHW,mBAGlDK,EAHkD,KAGtCC,EAHsC,KAIpDC,EAAiBN,EAAYO,QAAO,SAACC,GAAD,OAAUZ,EAAUa,SAASD,MACjEE,EAAeV,EAAYO,QAAO,SAACC,GAAD,OAAWZ,EAAUa,SAASD,MAChEG,EAA0Bf,EAAUW,QAAO,SAACC,GAAD,OAAWR,EAAYS,SAASD,MAC3EI,EAAgC,EAAxBN,EAAeO,QAAcH,EAAaG,OAASF,EAAwBE,QAsBzF,OACC,sBAAKC,UAAU,eAAf,UACEV,EACA,sBAAKU,UAAU,wBAAf,UACC,qBAAIA,UAAU,cAAd,oBACKF,GAAS,EAAI,gBAAkB,mBADpC,KAC2Df,KAE3D,oBAAIiB,UAAU,cAAd,yBACA,qBAAIA,UAAU,oBAAd,UAAmCF,EAAnC,gBAGD,gCACC,qBAAKE,UAAU,WAAf,SAA2BhB,IAC3B,qBAAKgB,UAAU,oBAAf,SACEnB,EAASoB,KAAI,SAACP,GAAD,OACb,sBAECM,UAAS,eAAUd,EAAYS,SAASD,GAAQ,SAAW,GAAlD,aAAyDN,EAC/DI,EAAeG,SAASD,GACvB,UACAE,EAAaD,SAASD,IACtBN,GAAgBS,EAAwBF,SAASD,GAChD,QACA,KACF,kBACHQ,QAAS,kBA7CQ,SAACR,GACxB,IAAKN,EACJ,GAAKF,EAAYS,SAASD,GAEnB,CACN,IACMS,EADkBjB,EACeO,QAAO,SAACW,GAAD,OAAgBA,IAAeV,KAC7EP,EAAegB,QAJfhB,GAAe,SAACD,GAAD,4BAAsBA,GAAtB,CAAmCQ,OA0C/BW,CAAgBX,IAVhC,UAYEN,GAAgBF,EAAYS,SAASD,GACrC,qBAAKM,UAAS,iBAAYR,EAAeG,SAASD,GAAQ,UAAY,SAAtE,SACEF,EAAeG,SAASD,GAAQ,OAAS,QAExC,KACHN,GAAgBS,EAAwBF,SAASD,GACjD,qBAAKM,UAAU,eAAf,iBACG,KACJ,sBAAMA,UAAU,eAAhB,SAAgCN,MAnB3BA,WA0BTN,EAAgBE,EASb,KARH,cAACgB,EAAA,EAAD,CACCC,QAAQ,WACRC,MAAM,UACNN,QAlD0B,WAC7BX,GAAc,IAkDXS,UAAU,sBAJX,yBASA,cAACM,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUN,QA5DvB,WACtBb,GAAgB,IA2DsDW,UAAU,wBAA9E,+B,QCrCWS,EA1CF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACTC,EAAWD,EAAWE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWX,SACjElB,EAAW8B,EAASI,UACpBjC,EAAY6B,EAASK,WACrBhC,EAAW2B,EAAS3B,SAHf,EAIyBC,oBAAS,GAJlC,mBAIHgC,EAJG,KAIQC,EAJR,OAKuBjC,mBAAS,IALhC,mBAKHkC,EALG,KAKOC,EALP,OAMwBC,cAA3BC,EANG,EAMHA,aAAcC,EANX,EAMWA,SAOjB,OACC,8BACEN,EACA,8BACC,cAAC,EAAD,CAAOpC,SAAUA,EAAUC,UAAWA,EAAWC,KAAMoC,EAAUnC,SAAUA,MAG5E,qBAAKgB,UAAU,YAAf,SACC,uBAAMA,UAAU,iBAAiBwB,SAAUF,GAb9B,SAAC,GAAc,IAAZvC,EAAW,EAAXA,KACnBqC,EAAYrC,GACZmC,GAAa,MAWV,UACC,oBAAIlB,UAAU,aAAd,4BACA,uBACCA,UAAU,aACVyB,KAAK,OACLC,IAAKH,EAAS,CAAEI,UAAU,EAAMC,UAAW,IAC3CC,YAAY,8BACZF,UAAQ,IAGT,cAACrB,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUsB,KAAK,SAAS9B,UAAU,yBAAnE,0B,QCrCO+B,EACM,wBADNA,EAEM,wBAONC,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,MAAe,CAC5CH,KAAMC,EACNG,QAAS,CACRD,UCNIE,E,kDACL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDA,MAAMC,iBAFO,E,0CAKnB,WACC,IAAM3B,EAAa4B,KAAKF,MAAMH,KAAKA,KACnC,OAAO,qBAAKjC,UAAU,MAAf,WAAwBU,KAAgBA,EAAWX,QAAU,cAAC,EAAD,CAAMW,WAAYA,U,GARtE6B,aAYHC,eAAQ,kBAAe,CAAEP,KAAjB,EAAGA,QAAuB,CAChDI,eDd6B,iBAAO,CACpCP,KAAMC,KCYQS,CAEZL,G,yBClBGM,EAAgB,CACrBR,KAAM,ICAQS,gCAAgB,CAC9BT,KDEc,WAA8C,IAAhCU,EAA+B,uDAAvBF,EAAeG,EAAQ,uCAC3D,OAAQA,EAAOd,MACd,KAAKC,EACJ,MAAO,CACNE,KAAMW,EAAOV,QAAQD,MAGvB,QACC,OAAOU,M,gCEZGE,EAAU,WACtB,OAAOC,IAAMC,IAAI,U,WCCRF,G,WAWAG,GAXV,SAAUH,IAAV,uEAEiB,OAFjB,kBAEuBI,YAAKC,GAF5B,OAGE,OADMC,EAFR,gBAGQC,YACLC,EAAuB,CACtBpB,KAAMkB,EAAOlB,QALjB,4GAWA,SAAUe,IAAV,iEACC,OADD,SACOM,YAAUD,EAAgCR,GADjD,uCAIA,IAEeU,EAFG,CAAEC,YAAKR,I,WChBAS,GAAV,SAAUA,IAAV,iEACd,OADc,SACRC,YAAI,YAAKC,IADD,uC,YCUfb,IAAMc,SAASC,QAAQC,KAAK,+BAAiC,IAC7DhB,IAAMc,SAASG,QAAU,8DAEzB,IAAMC,EAAiBC,cAEjBC,EAAQC,sBAAYC,EAAUC,8BAAoBC,0BAAgBN,KACxEA,EAAeO,IAAId,GAEnBe,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACC,cAAC,EAAD,QAGFS,SAASC,eAAe,W","file":"static/js/main.574e5827.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Button } from '@material-ui/core'\n\nconst Words = ({ allWords, goodWords, nick, question }) => {\n\tconst [ pickedWords, setPickedWords ] = useState([])\n\tconst [ checkAnswers, setCheckAnswers ] = useState(false)\n\tconst [ finishGame, setFinishGame ] = useState(false)\n\tconst correctAnswers = pickedWords.filter((word) => goodWords.includes(word))\n\tconst wrongAnswers = pickedWords.filter((word) => !goodWords.includes(word))\n\tconst correctAnswersNotPicked = goodWords.filter((word) => !pickedWords.includes(word))\n\tconst score = correctAnswers.length * 2 - (wrongAnswers.length + correctAnswersNotPicked.length)\n\n\tconst wordHandleClick = (word) => {\n\t\tif (!checkAnswers) {\n\t\t\tif (!pickedWords.includes(word)) {\n\t\t\t\tsetPickedWords((pickedWords) => [ ...pickedWords, word ])\n\t\t\t} else {\n\t\t\t\tconst pickedWordsCopy = pickedWords\n\t\t\t\tconst newPickedWords = pickedWordsCopy.filter((pickedWord) => pickedWord !== word)\n\t\t\t\tsetPickedWords(newPickedWords)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst btnHandleClick = () => {\n\t\tsetCheckAnswers(true)\n\t}\n\n\tconst finishGameHandleClick = () => {\n\t\tsetFinishGame(true)\n\t}\n\n\treturn (\n\t\t<div className=\"main-content\">\n\t\t\t{finishGame ? (\n\t\t\t\t<div className=\"finish-game-container\">\n\t\t\t\t\t<h2 className=\"finish-game\">\n\t\t\t\t\t\t{`${score <= 0 ? 'Try next time' : 'Congratulations'}`}, {nick}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<h2 className=\"finish-game\">Your score:</h2>\n\t\t\t\t\t<h3 className=\"finish-game score\">{score} points</h3>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"question\">{question}</div>\n\t\t\t\t\t<div className=\"all-words-wrapper\">\n\t\t\t\t\t\t{allWords.map((word) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={word}\n\t\t\t\t\t\t\t\tclassName={`word ${pickedWords.includes(word) ? 'active' : ''}  ${checkAnswers\n\t\t\t\t\t\t\t\t\t? correctAnswers.includes(word)\n\t\t\t\t\t\t\t\t\t\t? 'correct'\n\t\t\t\t\t\t\t\t\t\t: wrongAnswers.includes(word) ||\n\t\t\t\t\t\t\t\t\t\t\t(checkAnswers && correctAnswersNotPicked.includes(word))\n\t\t\t\t\t\t\t\t\t\t\t? 'wrong'\n\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t: 'picking-active'}`}\n\t\t\t\t\t\t\t\tonClick={() => wordHandleClick(word)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{checkAnswers && pickedWords.includes(word) ? (\n\t\t\t\t\t\t\t\t\t<div className={`result ${correctAnswers.includes(word) ? 'correct' : 'wrong'}`}>\n\t\t\t\t\t\t\t\t\t\t{correctAnswers.includes(word) ? 'Good' : 'Bad'}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t{checkAnswers && correctAnswersNotPicked.includes(word) ? (\n\t\t\t\t\t\t\t\t\t<div className=\"wrong result\">Bad</div>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t<span className=\"word-content\">{word}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{checkAnswers ? !finishGame ? (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={finishGameHandleClick}\n\t\t\t\t\tclassName=\"btn btn-finish-game\"\n\t\t\t\t>\n\t\t\t\t\tfinish game\n\t\t\t\t</Button>\n\t\t\t) : null : (\n\t\t\t\t<Button variant=\"outlined\" color=\"primary\" onClick={btnHandleClick} className=\"btn btn-check-answers\">\n\t\t\t\t\tcheck answers\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Words\n","import React, { useState } from 'react'\nimport Words from '../components/Words'\nimport { useForm } from 'react-hook-form'\nimport { Button } from '@material-ui/core'\n\nconst Game = ({ categories }) => {\n\tconst category = categories[Math.floor(Math.random() * categories.length)],\n\t\tallWords = category.all_words,\n\t\tgoodWords = category.good_words,\n\t\tquestion = category.question,\n\t\t[ startGame, setStartGame ] = useState(false),\n\t\t[ userNick, setUserNick ] = useState(''),\n\t\t{ handleSubmit, register } = useForm()\n\n\tconst onSubmit = ({ nick }) => {\n\t\tsetUserNick(nick)\n\t\tsetStartGame(true)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{startGame ? (\n\t\t\t\t<div>\n\t\t\t\t\t<Words allWords={allWords} goodWords={goodWords} nick={userNick} question={question} />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"game-form\">\n\t\t\t\t\t<form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t\t<h3 className=\"form-title\">Wordcloud game</h3>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"input-form\"\n\t\t\t\t\t\t\tname=\"nick\"\n\t\t\t\t\t\t\tref={register({ required: true, minLength: 2 })}\n\t\t\t\t\t\t\tplaceholder=\"Enter your nickname here...\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" type=\"submit\" className=\"cart-btn form-cart-btn\">\n\t\t\t\t\t\t\tplay\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Game\n","export const Types = {\n\tGET_DATA_REQUEST: 'data/get_data_request',\n\tGET_DATA_SUCCESS: 'data/get_data_success'\n}\n\nexport const getDataRequest = () => ({\n\ttype: Types.GET_DATA_REQUEST\n})\n\nexport const getDataSuccess = ({ data }) => ({\n\ttype: Types.GET_DATA_SUCCESS,\n\tpayload: {\n\t\tdata\n\t}\n})\n","import React, { Component } from 'react'\nimport './App.scss'\nimport Game from './components/Game'\nimport { connect } from 'react-redux'\nimport { getDataRequest } from './actions/data'\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.props.getDataRequest()\n\t}\n\n\trender() {\n\t\tconst categories = this.props.data.data\n\t\treturn <div className=\"App\">{!!categories && !!categories.length && <Game categories={categories} />}</div>\n\t}\n}\n\nexport default connect(({ data }) => ({ data }), {\n\tgetDataRequest\n})(App)\n","import { Types } from '../actions/data'\n\nconst INITIAL_STATE = {\n\tdata: []\n}\n\nexport default function data(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase Types.GET_DATA_SUCCESS: {\n\t\t\treturn {\n\t\t\t\tdata: action.payload.data\n\t\t\t}\n\t\t}\n\t\tdefault: {\n\t\t\treturn state\n\t\t}\n\t}\n}\n","import { combineReducers } from 'redux'\nimport DataReducer from './data'\n\nexport default combineReducers({\n\tdata: DataReducer\n})\n","import axios from 'axios'\n\nexport const getData = () => {\n\treturn axios.get('/data')\n}\n","import { takeEvery, call, fork, put } from 'redux-saga/effects'\nimport * as actions from '../actions/data'\nimport * as api from '../api/data'\n\nfunction* getData() {\n\ttry {\n\t\tconst result = yield call(api.getData)\n\t\tyield put(\n\t\t\tactions.getDataSuccess({\n\t\t\t\tdata: result.data\n\t\t\t})\n\t\t)\n\t} catch (e) {}\n}\n\nfunction* watchGetDataRequest() {\n\tyield takeEvery(actions.Types.GET_DATA_REQUEST, getData)\n}\n\nconst dataSagas = [ fork(watchGetDataRequest) ]\n\nexport default dataSagas\n","import DataSagas from './data'\nimport { all } from 'redux-saga/effects'\n\nexport default function* rootSaga() {\n\tyield all([ ...DataSagas ])\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport axios from 'axios'\nimport reducers from './reducers'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './sagas'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\n// axios.defaults.withCredentials = true\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\naxios.defaults.baseURL = 'https://a31c60d7-85eb-43d0-99d8-c5f192a7edfa.mock.pstmn.io/'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(sagaMiddleware)))\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}